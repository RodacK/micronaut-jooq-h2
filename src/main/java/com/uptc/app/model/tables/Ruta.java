/*
 * This file is generated by jOOQ.
 */
package model.tables;


import java.time.LocalDate;
import java.util.Arrays;
import java.util.List;

import model.Keys;
import model.Transmi;
import model.tables.records.RutaRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Ruta extends TableImpl<RutaRecord> {

    private static final long serialVersionUID = 585104048;

    /**
     * The reference instance of <code>TRANSMI.RUTA</code>
     */
    public static final Ruta RUTA = new Ruta();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RutaRecord> getRecordType() {
        return RutaRecord.class;
    }

    /**
     * The column <code>TRANSMI.RUTA.ID</code>.
     */
    public final TableField<RutaRecord, Integer> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TRANSMI.RUTA.NOMBRE</code>.
     */
    public final TableField<RutaRecord, String> NOMBRE = createField(DSL.name("NOMBRE"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>TRANSMI.RUTA.NUMERO</code>.
     */
    public final TableField<RutaRecord, String> NUMERO = createField(DSL.name("NUMERO"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>TRANSMI.RUTA.INICIO</code>.
     */
    public final TableField<RutaRecord, LocalDate> INICIO = createField(DSL.name("INICIO"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * The column <code>TRANSMI.RUTA.FIN</code>.
     */
    public final TableField<RutaRecord, LocalDate> FIN = createField(DSL.name("FIN"), org.jooq.impl.SQLDataType.LOCALDATE.nullable(false), this, "");

    /**
     * Create a <code>TRANSMI.RUTA</code> table reference
     */
    public Ruta() {
        this(DSL.name("RUTA"), null);
    }

    /**
     * Create an aliased <code>TRANSMI.RUTA</code> table reference
     */
    public Ruta(String alias) {
        this(DSL.name(alias), RUTA);
    }

    /**
     * Create an aliased <code>TRANSMI.RUTA</code> table reference
     */
    public Ruta(Name alias) {
        this(alias, RUTA);
    }

    private Ruta(Name alias, Table<RutaRecord> aliased) {
        this(alias, aliased, null);
    }

    private Ruta(Name alias, Table<RutaRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Ruta(Table<O> child, ForeignKey<O, RutaRecord> key) {
        super(child, key, RUTA);
    }

    @Override
    public Schema getSchema() {
        return Transmi.TRANSMI;
    }

    @Override
    public UniqueKey<RutaRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_2;
    }

    @Override
    public List<UniqueKey<RutaRecord>> getKeys() {
        return Arrays.<UniqueKey<RutaRecord>>asList(Keys.CONSTRAINT_2);
    }

    @Override
    public Ruta as(String alias) {
        return new Ruta(DSL.name(alias), this);
    }

    @Override
    public Ruta as(Name alias) {
        return new Ruta(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Ruta rename(String name) {
        return new Ruta(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Ruta rename(Name name) {
        return new Ruta(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, String, String, LocalDate, LocalDate> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
