/*
 * This file is generated by jOOQ.
 */
package model.tables.records;


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import model.tables.Vehiculo;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(name = "VEHICULO", schema = "TRANSMI", uniqueConstraints = {
    @UniqueConstraint(name = "CONSTRAINT_A", columnNames = {"ID"})
})
public class VehiculoRecord extends UpdatableRecordImpl<VehiculoRecord> implements Record4<Integer, String, Integer, String> {

    private static final long serialVersionUID = 1466405839;

    /**
     * Setter for <code>TRANSMI.VEHICULO.ID</code>.
     */
    public VehiculoRecord setId(Integer value) {
        set(0, value);
        return this;
    }

    /**
     * Getter for <code>TRANSMI.VEHICULO.ID</code>.
     */
    @Id
    @Column(name = "ID", nullable = false, precision = 10)
    @NotNull
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>TRANSMI.VEHICULO.PALCA</code>.
     */
    public VehiculoRecord setPalca(String value) {
        set(1, value);
        return this;
    }

    /**
     * Getter for <code>TRANSMI.VEHICULO.PALCA</code>.
     */
    @Column(name = "PALCA", nullable = false, length = 45)
    @NotNull
    @Size(max = 45)
    public String getPalca() {
        return (String) get(1);
    }

    /**
     * Setter for <code>TRANSMI.VEHICULO.CAPACIDAD</code>.
     */
    public VehiculoRecord setCapacidad(Integer value) {
        set(2, value);
        return this;
    }

    /**
     * Getter for <code>TRANSMI.VEHICULO.CAPACIDAD</code>.
     */
    @Column(name = "CAPACIDAD", nullable = false, precision = 10)
    @NotNull
    public Integer getCapacidad() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>TRANSMI.VEHICULO.COLOR</code>.
     */
    public VehiculoRecord setColor(String value) {
        set(3, value);
        return this;
    }

    /**
     * Getter for <code>TRANSMI.VEHICULO.COLOR</code>.
     */
    @Column(name = "COLOR", nullable = false, length = 45)
    @NotNull
    @Size(max = 45)
    public String getColor() {
        return (String) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, String, Integer, String> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Vehiculo.VEHICULO.ID;
    }

    @Override
    public Field<String> field2() {
        return Vehiculo.VEHICULO.PALCA;
    }

    @Override
    public Field<Integer> field3() {
        return Vehiculo.VEHICULO.CAPACIDAD;
    }

    @Override
    public Field<String> field4() {
        return Vehiculo.VEHICULO.COLOR;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getPalca();
    }

    @Override
    public Integer component3() {
        return getCapacidad();
    }

    @Override
    public String component4() {
        return getColor();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getPalca();
    }

    @Override
    public Integer value3() {
        return getCapacidad();
    }

    @Override
    public String value4() {
        return getColor();
    }

    @Override
    public VehiculoRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public VehiculoRecord value2(String value) {
        setPalca(value);
        return this;
    }

    @Override
    public VehiculoRecord value3(Integer value) {
        setCapacidad(value);
        return this;
    }

    @Override
    public VehiculoRecord value4(String value) {
        setColor(value);
        return this;
    }

    @Override
    public VehiculoRecord values(Integer value1, String value2, Integer value3, String value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached VehiculoRecord
     */
    public VehiculoRecord() {
        super(Vehiculo.VEHICULO);
    }

    /**
     * Create a detached, initialised VehiculoRecord
     */
    public VehiculoRecord(Integer id, String palca, Integer capacidad, String color) {
        super(Vehiculo.VEHICULO);

        set(0, id);
        set(1, palca);
        set(2, capacidad);
        set(3, color);
    }
}
