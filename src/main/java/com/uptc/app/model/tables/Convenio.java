/*
 * This file is generated by jOOQ.
 */
package model.tables;


import java.util.Arrays;
import java.util.List;

import model.Keys;
import model.Transmi;
import model.tables.records.ConvenioRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Convenio extends TableImpl<ConvenioRecord> {

    private static final long serialVersionUID = 76307335;

    /**
     * The reference instance of <code>TRANSMI.CONVENIO</code>
     */
    public static final Convenio CONVENIO = new Convenio();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ConvenioRecord> getRecordType() {
        return ConvenioRecord.class;
    }

    /**
     * The column <code>TRANSMI.CONVENIO.ID</code>.
     */
    public final TableField<ConvenioRecord, Integer> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TRANSMI.CONVENIO.EMPRESA</code>.
     */
    public final TableField<ConvenioRecord, String> EMPRESA = createField(DSL.name("EMPRESA"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>TRANSMI.CONVENIO.NUMERO_CONVENIO</code>.
     */
    public final TableField<ConvenioRecord, Integer> NUMERO_CONVENIO = createField(DSL.name("NUMERO_CONVENIO"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>TRANSMI.CONVENIO</code> table reference
     */
    public Convenio() {
        this(DSL.name("CONVENIO"), null);
    }

    /**
     * Create an aliased <code>TRANSMI.CONVENIO</code> table reference
     */
    public Convenio(String alias) {
        this(DSL.name(alias), CONVENIO);
    }

    /**
     * Create an aliased <code>TRANSMI.CONVENIO</code> table reference
     */
    public Convenio(Name alias) {
        this(alias, CONVENIO);
    }

    private Convenio(Name alias, Table<ConvenioRecord> aliased) {
        this(alias, aliased, null);
    }

    private Convenio(Name alias, Table<ConvenioRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Convenio(Table<O> child, ForeignKey<O, ConvenioRecord> key) {
        super(child, key, CONVENIO);
    }

    @Override
    public Schema getSchema() {
        return Transmi.TRANSMI;
    }

    @Override
    public UniqueKey<ConvenioRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_C;
    }

    @Override
    public List<UniqueKey<ConvenioRecord>> getKeys() {
        return Arrays.<UniqueKey<ConvenioRecord>>asList(Keys.CONSTRAINT_C);
    }

    @Override
    public Convenio as(String alias) {
        return new Convenio(DSL.name(alias), this);
    }

    @Override
    public Convenio as(Name alias) {
        return new Convenio(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Convenio rename(String name) {
        return new Convenio(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Convenio rename(Name name) {
        return new Convenio(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
