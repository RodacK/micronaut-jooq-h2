/*
 * This file is generated by jOOQ.
 */
package model.tables;


import java.util.Arrays;
import java.util.List;

import model.Keys;
import model.Transmi;
import model.tables.records.VehiculoRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Vehiculo extends TableImpl<VehiculoRecord> {

    private static final long serialVersionUID = -409231637;

    /**
     * The reference instance of <code>TRANSMI.VEHICULO</code>
     */
    public static final Vehiculo VEHICULO = new Vehiculo();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<VehiculoRecord> getRecordType() {
        return VehiculoRecord.class;
    }

    /**
     * The column <code>TRANSMI.VEHICULO.ID</code>.
     */
    public final TableField<VehiculoRecord, Integer> ID = createField(DSL.name("ID"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TRANSMI.VEHICULO.PALCA</code>.
     */
    public final TableField<VehiculoRecord, String> PALCA = createField(DSL.name("PALCA"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * The column <code>TRANSMI.VEHICULO.CAPACIDAD</code>.
     */
    public final TableField<VehiculoRecord, Integer> CAPACIDAD = createField(DSL.name("CAPACIDAD"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>TRANSMI.VEHICULO.COLOR</code>.
     */
    public final TableField<VehiculoRecord, String> COLOR = createField(DSL.name("COLOR"), org.jooq.impl.SQLDataType.VARCHAR(45).nullable(false), this, "");

    /**
     * Create a <code>TRANSMI.VEHICULO</code> table reference
     */
    public Vehiculo() {
        this(DSL.name("VEHICULO"), null);
    }

    /**
     * Create an aliased <code>TRANSMI.VEHICULO</code> table reference
     */
    public Vehiculo(String alias) {
        this(DSL.name(alias), VEHICULO);
    }

    /**
     * Create an aliased <code>TRANSMI.VEHICULO</code> table reference
     */
    public Vehiculo(Name alias) {
        this(alias, VEHICULO);
    }

    private Vehiculo(Name alias, Table<VehiculoRecord> aliased) {
        this(alias, aliased, null);
    }

    private Vehiculo(Name alias, Table<VehiculoRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Vehiculo(Table<O> child, ForeignKey<O, VehiculoRecord> key) {
        super(child, key, VEHICULO);
    }

    @Override
    public Schema getSchema() {
        return Transmi.TRANSMI;
    }

    @Override
    public UniqueKey<VehiculoRecord> getPrimaryKey() {
        return Keys.CONSTRAINT_A;
    }

    @Override
    public List<UniqueKey<VehiculoRecord>> getKeys() {
        return Arrays.<UniqueKey<VehiculoRecord>>asList(Keys.CONSTRAINT_A);
    }

    @Override
    public Vehiculo as(String alias) {
        return new Vehiculo(DSL.name(alias), this);
    }

    @Override
    public Vehiculo as(Name alias) {
        return new Vehiculo(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Vehiculo rename(String name) {
        return new Vehiculo(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Vehiculo rename(Name name) {
        return new Vehiculo(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, String, Integer, String> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
